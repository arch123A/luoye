Python里面的xlrd模块详解（一）


1.什么是xlrd模块？
♦python操作excel主要用到xlrd和xlwt这两个库，即xlrd是读excel，xlwt是写excel的库。
二、使用介绍
1、常用单元格中的数据类型
♦ 0. empty（空的）,1 string（text）, 2 number, 3 date, 4 boolean, 5 error， 6 blank（空白表格）
2、导入模块
import xlrd
3、打开Excel文件读取数据

data = xlrd.open_workbook(filename)#文件名以及路径，如果路径或者文件名有中文给前面加一个r拜师原生字符。
4、常用的函数
♦ excel中最重要的方法就是book和sheet的操作
1）获取book中一个工作表

table = data.sheets()[0]          #通过索引顺序获取
 
table = data.sheet_by_index(sheet_indx)) #通过索引顺序获取
 
table = data.sheet_by_name(sheet_name)#通过名称获取
 
以上三个函数都会返回一个xlrd.sheet.Sheet()对象
 
names = data.sheet_names()    #返回book中所有工作表的名字
 
data.sheet_loaded(sheet_name or indx)   # 检查某个sheet是否导入完毕
如：

11247195-548873e1d1bd7092.png
image
2）行的操作

nrows = table.nrows  #获取该sheet中的有效行数
 
table.row(rowx)  #返回由该行中所有的单元格对象组成的列表
 
table.row_slice(rowx)  #返回由该列中所有的单元格对象组成的列表
 
table.row_types(rowx, start_colx=0, end_colx=None)    #返回由该行中所有单元格的数据类型组成的列表
 
table.row_values(rowx, start_colx=0, end_colx=None)   #返回由该行中所有单元格的数据组成的列表
 
table.row_len(rowx) #返回该列的有效单元格长度
11247195-942831b3bae2796a.png
image
3）列(colnum)的操作

ncols = table.ncols   #获取列表的有效列数
 
table.col(colx, start_rowx=0, end_rowx=None)  #返回由该列中所有的单元格对象组成的列表
 
table.col_slice(colx, start_rowx=0, end_rowx=None)  #返回由该列中所有的单元格对象组成的列表
 
table.col_types(colx, start_rowx=0, end_rowx=None)    #返回由该列中所有单元格的数据类型组成的列表
 
table.col_values(colx, start_rowx=0, end_rowx=None)   #返回由该列中所有单元格的数据组成的列表
如：

11247195-bd0bd42419f9f461.png
image
  4）单元格的操作  
table.cell(rowx,colx)   #返回单元格对象
 
table.cell_type(rowx,colx)    #返回单元格中的数据类型
 
table.cell_value(rowx,colx)   #返回单元格中的数据
 
table.cell_xf_index(rowx, colx)   # 暂时还没有搞懂
♦单元格：单元格是表格中行与列的交叉部分，它是组成表格的最小单位，可拆分或者合并。单个数据的输入和修改都是在单元格中进行的

注意：注意作用域问题，之前获取的sheet之后，都在获取到这个sheet值后，在进行，行和列以及单元格的操作。

♦ python解决open()函数、xlrd.open_workbook()函数文件名包含中文，sheet名包含中文报错的问题

问题现象：
♦1、使用open()函数、xlrd.open_workbook()函数打开文件，文件名若包含中文，会报错找不到这个文件或目录。

♦2、获取sheet时若包含中文，也会报错。

#打开文件
file = open(filename,'rb')
 
#打开excel文件
workbook = xlrd.open_workbook(filename)
 
#获取sheet
sheet = workbook.sheet_by_name(sheetname)
解决方案：

♦对参数进行转码即可。如：

filename = filename.decode('utf-8')
♦也试过unicode函数，不过，在ride中运行时出现了报错，所以不赞成使用。

filename = unicode(filename,'utf-8')
https://blog.csdn.net/weixin_34413357/article/details/88222595
